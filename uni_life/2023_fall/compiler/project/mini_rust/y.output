State 75 conflicts: 1 reduce/reduce


Grammar

    0 $accept: S $end

    1 S: Pgm

    2 Pgm: Fn_decl Pgm
    3    | Fn_main

    4 Fn_main: FN MAIN L_PAREN R_PAREN L_BRACE Body R_BRACE

    5 Fn_decl: FN ID L_PAREN TYPES ARROW TYPES R_PAREN L_BRACE Body R_BRACE

    6 Fn_call: ID L_PAREN Params R_PAREN

    7 Body: Stmt SEMICOLON Body
    8     | Stmt SEMICOLON

    9 Stmt: Stmt_Assign
   10     | Fn_call
   11     | Macro_println
   12     | ε

   13 Macro_println: MACRO_PRINTLN L_PAREN STR_LITERAL R_PAREN
   14              | MACRO_PRINTLN L_PAREN STR_LITERAL COMMA ID R_PAREN

   15 TYPES: TYPE_U8 TYPES
   16      | TYPE_STR TYPES
   17      | COMMA TYPES
   18      | ε

   19 Params: Param COMMA Params
   20       | Param
   21       | ε

   22 Param: Expr

   23 Stmt_Assign: LET ID COLON TYPE_U8 OP_ASSIGN Expr
   24            | LET ID COLON TYPE_STR OP_ASSIGN STR_LITERAL
   25            | LET ID COLON TYPE_U8 OP_ASSIGN ID

   26 Expr: Expr OP_ADD Term
   27     | Expr OP_SUB Term
   28     | Term

   29 Term: Term OP_MUL Factor
   30     | Term OP_DIV Factor
   31     | Factor

   32 Factor: L_BRACE Expr R_BRACE
   33       | OP_SUB Factor
   34       | OP_ADD Factor
   35       | NUM
   36       | ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    FN (258) 4 5
    L_PAREN (259) 4 5 6 13 14
    R_PAREN (260) 4 5 6 13 14
    L_BRACE (261) 4 5 32
    R_BRACE (262) 4 5 32
    MAIN (263) 4
    LET (264) 23 24 25
    TYPE_U8 (265) 15 23 25
    TYPE_STR (266) 16 24
    MACRO_PRINTLN (267) 13 14
    ARROW (268) 5
    SEMICOLON (269) 7 8
    COLON (270) 23 24 25
    COMMA (271) 14 17 19
    OP_ADD (272) 26 34
    OP_SUB (273) 27 33
    OP_MUL (274) 29
    OP_DIV (275) 30
    OP_ASSIGN (276) 23 24 25
    NUM <ival> (277) 35
    ID <sval> (278) 5 6 14 23 24 25 36
    STR_LITERAL <sval> (279) 13 14 24


Nonterminals, with rules where they appear

    $accept (25)
        on left: 0
    S (26)
        on left: 1
        on right: 0
    Pgm (27)
        on left: 2 3
        on right: 1 2
    Fn_main (28)
        on left: 4
        on right: 3
    Fn_decl (29)
        on left: 5
        on right: 2
    Fn_call (30)
        on left: 6
        on right: 10
    Body (31)
        on left: 7 8
        on right: 4 5 7
    Stmt (32)
        on left: 9 10 11 12
        on right: 7 8
    Macro_println (33)
        on left: 13 14
        on right: 11
    TYPES (34)
        on left: 15 16 17 18
        on right: 5 15 16 17
    Params (35)
        on left: 19 20 21
        on right: 6 19
    Param <ival> (36)
        on left: 22
        on right: 19 20
    Stmt_Assign (37)
        on left: 23 24 25
        on right: 9
    Expr <ival> (38)
        on left: 26 27 28
        on right: 22 23 26 27 32
    Term <ival> (39)
        on left: 29 30 31
        on right: 26 27 28 29 30
    Factor <ival> (40)
        on left: 32 33 34 35 36
        on right: 29 30 31 33 34


State 0

    0 $accept: • S $end

    FN  shift, and go to state 1

    S        go to state 2
    Pgm      go to state 3
    Fn_main  go to state 4
    Fn_decl  go to state 5


State 1

    4 Fn_main: FN • MAIN L_PAREN R_PAREN L_BRACE Body R_BRACE
    5 Fn_decl: FN • ID L_PAREN TYPES ARROW TYPES R_PAREN L_BRACE Body R_BRACE

    MAIN  shift, and go to state 6
    ID    shift, and go to state 7


State 2

    0 $accept: S • $end

    $end  shift, and go to state 8


State 3

    1 S: Pgm •

    $default  reduce using rule 1 (S)


State 4

    3 Pgm: Fn_main •

    $default  reduce using rule 3 (Pgm)


State 5

    2 Pgm: Fn_decl • Pgm

    FN  shift, and go to state 1

    Pgm      go to state 9
    Fn_main  go to state 4
    Fn_decl  go to state 5


State 6

    4 Fn_main: FN MAIN • L_PAREN R_PAREN L_BRACE Body R_BRACE

    L_PAREN  shift, and go to state 10


State 7

    5 Fn_decl: FN ID • L_PAREN TYPES ARROW TYPES R_PAREN L_BRACE Body R_BRACE

    L_PAREN  shift, and go to state 11


State 8

    0 $accept: S $end •

    $default  accept


State 9

    2 Pgm: Fn_decl Pgm •

    $default  reduce using rule 2 (Pgm)


State 10

    4 Fn_main: FN MAIN L_PAREN • R_PAREN L_BRACE Body R_BRACE

    R_PAREN  shift, and go to state 12


State 11

    5 Fn_decl: FN ID L_PAREN • TYPES ARROW TYPES R_PAREN L_BRACE Body R_BRACE

    TYPE_U8   shift, and go to state 13
    TYPE_STR  shift, and go to state 14
    COMMA     shift, and go to state 15

    $default  reduce using rule 18 (TYPES)

    TYPES  go to state 16


State 12

    4 Fn_main: FN MAIN L_PAREN R_PAREN • L_BRACE Body R_BRACE

    L_BRACE  shift, and go to state 17


State 13

   15 TYPES: TYPE_U8 • TYPES

    TYPE_U8   shift, and go to state 13
    TYPE_STR  shift, and go to state 14
    COMMA     shift, and go to state 15

    $default  reduce using rule 18 (TYPES)

    TYPES  go to state 18


State 14

   16 TYPES: TYPE_STR • TYPES

    TYPE_U8   shift, and go to state 13
    TYPE_STR  shift, and go to state 14
    COMMA     shift, and go to state 15

    $default  reduce using rule 18 (TYPES)

    TYPES  go to state 19


State 15

   17 TYPES: COMMA • TYPES

    TYPE_U8   shift, and go to state 13
    TYPE_STR  shift, and go to state 14
    COMMA     shift, and go to state 15

    $default  reduce using rule 18 (TYPES)

    TYPES  go to state 20


State 16

    5 Fn_decl: FN ID L_PAREN TYPES • ARROW TYPES R_PAREN L_BRACE Body R_BRACE

    ARROW  shift, and go to state 21


State 17

    4 Fn_main: FN MAIN L_PAREN R_PAREN L_BRACE • Body R_BRACE

    LET            shift, and go to state 22
    MACRO_PRINTLN  shift, and go to state 23
    ID             shift, and go to state 24

    $default  reduce using rule 12 (Stmt)

    Fn_call        go to state 25
    Body           go to state 26
    Stmt           go to state 27
    Macro_println  go to state 28
    Stmt_Assign    go to state 29


State 18

   15 TYPES: TYPE_U8 TYPES •

    $default  reduce using rule 15 (TYPES)


State 19

   16 TYPES: TYPE_STR TYPES •

    $default  reduce using rule 16 (TYPES)


State 20

   17 TYPES: COMMA TYPES •

    $default  reduce using rule 17 (TYPES)


State 21

    5 Fn_decl: FN ID L_PAREN TYPES ARROW • TYPES R_PAREN L_BRACE Body R_BRACE

    TYPE_U8   shift, and go to state 13
    TYPE_STR  shift, and go to state 14
    COMMA     shift, and go to state 15

    $default  reduce using rule 18 (TYPES)

    TYPES  go to state 30


State 22

   23 Stmt_Assign: LET • ID COLON TYPE_U8 OP_ASSIGN Expr
   24            | LET • ID COLON TYPE_STR OP_ASSIGN STR_LITERAL
   25            | LET • ID COLON TYPE_U8 OP_ASSIGN ID

    ID  shift, and go to state 31


State 23

   13 Macro_println: MACRO_PRINTLN • L_PAREN STR_LITERAL R_PAREN
   14              | MACRO_PRINTLN • L_PAREN STR_LITERAL COMMA ID R_PAREN

    L_PAREN  shift, and go to state 32


State 24

    6 Fn_call: ID • L_PAREN Params R_PAREN

    L_PAREN  shift, and go to state 33


State 25

   10 Stmt: Fn_call •

    $default  reduce using rule 10 (Stmt)


State 26

    4 Fn_main: FN MAIN L_PAREN R_PAREN L_BRACE Body • R_BRACE

    R_BRACE  shift, and go to state 34


State 27

    7 Body: Stmt • SEMICOLON Body
    8     | Stmt • SEMICOLON

    SEMICOLON  shift, and go to state 35


State 28

   11 Stmt: Macro_println •

    $default  reduce using rule 11 (Stmt)


State 29

    9 Stmt: Stmt_Assign •

    $default  reduce using rule 9 (Stmt)


State 30

    5 Fn_decl: FN ID L_PAREN TYPES ARROW TYPES • R_PAREN L_BRACE Body R_BRACE

    R_PAREN  shift, and go to state 36


State 31

   23 Stmt_Assign: LET ID • COLON TYPE_U8 OP_ASSIGN Expr
   24            | LET ID • COLON TYPE_STR OP_ASSIGN STR_LITERAL
   25            | LET ID • COLON TYPE_U8 OP_ASSIGN ID

    COLON  shift, and go to state 37


State 32

   13 Macro_println: MACRO_PRINTLN L_PAREN • STR_LITERAL R_PAREN
   14              | MACRO_PRINTLN L_PAREN • STR_LITERAL COMMA ID R_PAREN

    STR_LITERAL  shift, and go to state 38


State 33

    6 Fn_call: ID L_PAREN • Params R_PAREN

    L_BRACE  shift, and go to state 39
    OP_ADD   shift, and go to state 40
    OP_SUB   shift, and go to state 41
    NUM      shift, and go to state 42
    ID       shift, and go to state 43

    $default  reduce using rule 21 (Params)

    Params  go to state 44
    Param   go to state 45
    Expr    go to state 46
    Term    go to state 47
    Factor  go to state 48


State 34

    4 Fn_main: FN MAIN L_PAREN R_PAREN L_BRACE Body R_BRACE •

    $default  reduce using rule 4 (Fn_main)


State 35

    7 Body: Stmt SEMICOLON • Body
    8     | Stmt SEMICOLON •

    LET            shift, and go to state 22
    MACRO_PRINTLN  shift, and go to state 23
    ID             shift, and go to state 24

    SEMICOLON  reduce using rule 12 (Stmt)
    $default   reduce using rule 8 (Body)

    Fn_call        go to state 25
    Body           go to state 49
    Stmt           go to state 27
    Macro_println  go to state 28
    Stmt_Assign    go to state 29


State 36

    5 Fn_decl: FN ID L_PAREN TYPES ARROW TYPES R_PAREN • L_BRACE Body R_BRACE

    L_BRACE  shift, and go to state 50


State 37

   23 Stmt_Assign: LET ID COLON • TYPE_U8 OP_ASSIGN Expr
   24            | LET ID COLON • TYPE_STR OP_ASSIGN STR_LITERAL
   25            | LET ID COLON • TYPE_U8 OP_ASSIGN ID

    TYPE_U8   shift, and go to state 51
    TYPE_STR  shift, and go to state 52


State 38

   13 Macro_println: MACRO_PRINTLN L_PAREN STR_LITERAL • R_PAREN
   14              | MACRO_PRINTLN L_PAREN STR_LITERAL • COMMA ID R_PAREN

    R_PAREN  shift, and go to state 53
    COMMA    shift, and go to state 54


State 39

   32 Factor: L_BRACE • Expr R_BRACE

    L_BRACE  shift, and go to state 39
    OP_ADD   shift, and go to state 40
    OP_SUB   shift, and go to state 41
    NUM      shift, and go to state 42
    ID       shift, and go to state 43

    Expr    go to state 55
    Term    go to state 47
    Factor  go to state 48


State 40

   34 Factor: OP_ADD • Factor

    L_BRACE  shift, and go to state 39
    OP_ADD   shift, and go to state 40
    OP_SUB   shift, and go to state 41
    NUM      shift, and go to state 42
    ID       shift, and go to state 43

    Factor  go to state 56


State 41

   33 Factor: OP_SUB • Factor

    L_BRACE  shift, and go to state 39
    OP_ADD   shift, and go to state 40
    OP_SUB   shift, and go to state 41
    NUM      shift, and go to state 42
    ID       shift, and go to state 43

    Factor  go to state 57


State 42

   35 Factor: NUM •

    $default  reduce using rule 35 (Factor)


State 43

   36 Factor: ID •

    $default  reduce using rule 36 (Factor)


State 44

    6 Fn_call: ID L_PAREN Params • R_PAREN

    R_PAREN  shift, and go to state 58


State 45

   19 Params: Param • COMMA Params
   20       | Param •

    COMMA  shift, and go to state 59

    $default  reduce using rule 20 (Params)


State 46

   22 Param: Expr •
   26 Expr: Expr • OP_ADD Term
   27     | Expr • OP_SUB Term

    OP_ADD  shift, and go to state 60
    OP_SUB  shift, and go to state 61

    $default  reduce using rule 22 (Param)


State 47

   28 Expr: Term •
   29 Term: Term • OP_MUL Factor
   30     | Term • OP_DIV Factor

    OP_MUL  shift, and go to state 62
    OP_DIV  shift, and go to state 63

    $default  reduce using rule 28 (Expr)


State 48

   31 Term: Factor •

    $default  reduce using rule 31 (Term)


State 49

    7 Body: Stmt SEMICOLON Body •

    $default  reduce using rule 7 (Body)


State 50

    5 Fn_decl: FN ID L_PAREN TYPES ARROW TYPES R_PAREN L_BRACE • Body R_BRACE

    LET            shift, and go to state 22
    MACRO_PRINTLN  shift, and go to state 23
    ID             shift, and go to state 24

    $default  reduce using rule 12 (Stmt)

    Fn_call        go to state 25
    Body           go to state 64
    Stmt           go to state 27
    Macro_println  go to state 28
    Stmt_Assign    go to state 29


State 51

   23 Stmt_Assign: LET ID COLON TYPE_U8 • OP_ASSIGN Expr
   25            | LET ID COLON TYPE_U8 • OP_ASSIGN ID

    OP_ASSIGN  shift, and go to state 65


State 52

   24 Stmt_Assign: LET ID COLON TYPE_STR • OP_ASSIGN STR_LITERAL

    OP_ASSIGN  shift, and go to state 66


State 53

   13 Macro_println: MACRO_PRINTLN L_PAREN STR_LITERAL R_PAREN •

    $default  reduce using rule 13 (Macro_println)


State 54

   14 Macro_println: MACRO_PRINTLN L_PAREN STR_LITERAL COMMA • ID R_PAREN

    ID  shift, and go to state 67


State 55

   26 Expr: Expr • OP_ADD Term
   27     | Expr • OP_SUB Term
   32 Factor: L_BRACE Expr • R_BRACE

    R_BRACE  shift, and go to state 68
    OP_ADD   shift, and go to state 60
    OP_SUB   shift, and go to state 61


State 56

   34 Factor: OP_ADD Factor •

    $default  reduce using rule 34 (Factor)


State 57

   33 Factor: OP_SUB Factor •

    $default  reduce using rule 33 (Factor)


State 58

    6 Fn_call: ID L_PAREN Params R_PAREN •

    $default  reduce using rule 6 (Fn_call)


State 59

   19 Params: Param COMMA • Params

    L_BRACE  shift, and go to state 39
    OP_ADD   shift, and go to state 40
    OP_SUB   shift, and go to state 41
    NUM      shift, and go to state 42
    ID       shift, and go to state 43

    $default  reduce using rule 21 (Params)

    Params  go to state 69
    Param   go to state 45
    Expr    go to state 46
    Term    go to state 47
    Factor  go to state 48


State 60

   26 Expr: Expr OP_ADD • Term

    L_BRACE  shift, and go to state 39
    OP_ADD   shift, and go to state 40
    OP_SUB   shift, and go to state 41
    NUM      shift, and go to state 42
    ID       shift, and go to state 43

    Term    go to state 70
    Factor  go to state 48


State 61

   27 Expr: Expr OP_SUB • Term

    L_BRACE  shift, and go to state 39
    OP_ADD   shift, and go to state 40
    OP_SUB   shift, and go to state 41
    NUM      shift, and go to state 42
    ID       shift, and go to state 43

    Term    go to state 71
    Factor  go to state 48


State 62

   29 Term: Term OP_MUL • Factor

    L_BRACE  shift, and go to state 39
    OP_ADD   shift, and go to state 40
    OP_SUB   shift, and go to state 41
    NUM      shift, and go to state 42
    ID       shift, and go to state 43

    Factor  go to state 72


State 63

   30 Term: Term OP_DIV • Factor

    L_BRACE  shift, and go to state 39
    OP_ADD   shift, and go to state 40
    OP_SUB   shift, and go to state 41
    NUM      shift, and go to state 42
    ID       shift, and go to state 43

    Factor  go to state 73


State 64

    5 Fn_decl: FN ID L_PAREN TYPES ARROW TYPES R_PAREN L_BRACE Body • R_BRACE

    R_BRACE  shift, and go to state 74


State 65

   23 Stmt_Assign: LET ID COLON TYPE_U8 OP_ASSIGN • Expr
   25            | LET ID COLON TYPE_U8 OP_ASSIGN • ID

    L_BRACE  shift, and go to state 39
    OP_ADD   shift, and go to state 40
    OP_SUB   shift, and go to state 41
    NUM      shift, and go to state 42
    ID       shift, and go to state 75

    Expr    go to state 76
    Term    go to state 47
    Factor  go to state 48


State 66

   24 Stmt_Assign: LET ID COLON TYPE_STR OP_ASSIGN • STR_LITERAL

    STR_LITERAL  shift, and go to state 77


State 67

   14 Macro_println: MACRO_PRINTLN L_PAREN STR_LITERAL COMMA ID • R_PAREN

    R_PAREN  shift, and go to state 78


State 68

   32 Factor: L_BRACE Expr R_BRACE •

    $default  reduce using rule 32 (Factor)


State 69

   19 Params: Param COMMA Params •

    $default  reduce using rule 19 (Params)


State 70

   26 Expr: Expr OP_ADD Term •
   29 Term: Term • OP_MUL Factor
   30     | Term • OP_DIV Factor

    OP_MUL  shift, and go to state 62
    OP_DIV  shift, and go to state 63

    $default  reduce using rule 26 (Expr)


State 71

   27 Expr: Expr OP_SUB Term •
   29 Term: Term • OP_MUL Factor
   30     | Term • OP_DIV Factor

    OP_MUL  shift, and go to state 62
    OP_DIV  shift, and go to state 63

    $default  reduce using rule 27 (Expr)


State 72

   29 Term: Term OP_MUL Factor •

    $default  reduce using rule 29 (Term)


State 73

   30 Term: Term OP_DIV Factor •

    $default  reduce using rule 30 (Term)


State 74

    5 Fn_decl: FN ID L_PAREN TYPES ARROW TYPES R_PAREN L_BRACE Body R_BRACE •

    $default  reduce using rule 5 (Fn_decl)


State 75

   25 Stmt_Assign: LET ID COLON TYPE_U8 OP_ASSIGN ID •
   36 Factor: ID •

    SEMICOLON  reduce using rule 25 (Stmt_Assign)
    SEMICOLON  [reduce using rule 36 (Factor)]
    $default   reduce using rule 36 (Factor)

    reduce/reduce conflict on token SEMICOLON:
       25 Stmt_Assign: LET ID COLON TYPE_U8 OP_ASSIGN ID •
       36 Factor: ID •
      Example: LET ID COLON TYPE_U8 OP_ASSIGN ID •
      First reduce derivation
        Stmt_Assign
        ↳ 25: LET ID COLON TYPE_U8 OP_ASSIGN ID •
      Second reduce derivation
        Stmt_Assign
        ↳ 23: LET ID COLON TYPE_U8 OP_ASSIGN Expr
                                             ↳ 28: Term
                                                   ↳ 31: Factor
                                                         ↳ 36: ID •



State 76

   23 Stmt_Assign: LET ID COLON TYPE_U8 OP_ASSIGN Expr •
   26 Expr: Expr • OP_ADD Term
   27     | Expr • OP_SUB Term

    OP_ADD  shift, and go to state 60
    OP_SUB  shift, and go to state 61

    $default  reduce using rule 23 (Stmt_Assign)


State 77

   24 Stmt_Assign: LET ID COLON TYPE_STR OP_ASSIGN STR_LITERAL •

    $default  reduce using rule 24 (Stmt_Assign)


State 78

   14 Macro_println: MACRO_PRINTLN L_PAREN STR_LITERAL COMMA ID R_PAREN •

    $default  reduce using rule 14 (Macro_println)
